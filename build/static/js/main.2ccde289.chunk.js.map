{"version":3,"sources":["helper/RequestAction.js","components/pages/login.js","components/button.js","components/Navbar.js","components/popup.js","components/room.js","components/loading.js","components/pages/dashboard.js","helper/ProtectedRoute.js","components/pages/Maiantainancelog.js","components/pages/electricbill.js","components/pages/waterbilll.js","components/pages/checkin.js","components/pages/payment.js","App.js","index.js"],"names":["getCookie","name","parts","document","cookie","split","length","pop","shift","a","result","axios","get","then","res","data","status","catch","err","console","log","Signout","user","post","withCredentials","headers","response","Login","useState","username","setUsername","password","setPassword","login","setLogin","to","className","onSubmit","event","preventDefault","ValidateLogin","email","htmlFor","type","required","onChange","e","target","value","STYLES","SIZES","Button","children","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","Navbar","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","Popup","props","trigger","setTrigger","_id","rent","deposit","guest","first_name","last_name","DoB","rooms","check_in_date","GuestCheckOut","location","reload","Room","RoomObj","setData","GuestRetrieveRoom","error","alert","msg","defaultOptions","loop","autoplay","animationData","rendererSetting","preserveAspectRatio","Loading","style","marginTop","options","height","width","Dashboard","formik","useFormik","initialValues","building","floor","setStatus","GuestRetrieveData","values","id","handleChange","map","room","ProtectedRoute","Component","component","restOfProps","token","setToken","CheckToken","render","Maintenancelog","setError","redirect","setRedirect","roomid","code","date","cost","note","MaintenancelogSubmit","handleSubmit","onBlur","handleBlur","rows","cols","form","ElectricBill","r01","r02","r03","r04","r05","r06","r07","r08","r09","r10","r11","r12","r13","r14","r15","payload","key","replace","unit","push","ElectricBillSubmit","WaterBill","WaterBillSubmit","Checkin","match","params","check_out_date","GuestCheckIn","Payment","RetrievePaymentDue","amount","RemovePaymentDue","App","path","exact","Maiantainancelog","ReactDom","getElementById"],"mappings":"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","file":"static/js/main.2ccde289.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nfunction getCookie(name) {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2) return parts.pop().split(';').shift();\r\n}\r\n\r\nasync function CheckToken() {\r\n  let result = null;\r\n  await axios\r\n    .get(`http://192.168.1.103/api/protected`,\r\n      { \"withCredentials\": true }\r\n    )\r\n    .then((res) => {\r\n      //console.log(\"res.data.status:\", res.data)\r\n      if (res.data.status === \"success\") {\r\n        result = true\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"in catch\");\r\n      result = false\r\n    });\r\n  //console.log(\"result:\", result);\r\n  return result\r\n}\r\n\r\nasync function Signout() {\r\n\r\n  await axios\r\n    .get(`http://192.168.1.103/api/user/signout`,\r\n      { \"withCredentials\": true }\r\n    )\r\n    .then((res) => {\r\n      if (res.data.status === \"success\") {\r\n        console.log(res.data.status);\r\n        return true\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return false\r\n    });\r\n  return false\r\n}\r\n\r\nasync function ValidateLogin(user) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/user/login`, user, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      result = true\r\n    })\r\n    .catch((err) => {\r\n      result = false\r\n    })\r\n  return result;\r\n}\r\nasync function MaintenancelogSubmit(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/maintenance_log/submit`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\nasync function WaterBillSubmit(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/waterbill/input`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\nasync function ElectricBillSubmit(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/electricbill/input`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\n\r\nasync function GuestRetrieveData(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/guest/retrieve_data`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\nasync function GuestRetrieveRoom(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/guest/retrieve_room`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\nasync function GuestCheckOut(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/guest/remove_guest`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\nasync function GuestCheckIn(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/guest/add_guest`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\n\r\nasync function RetrievePaymentDue() {\r\n  let result = null;\r\n  await axios\r\n    .get(`http://192.168.1.103/api/guest/retrieve_payment_due`, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\n\r\n\r\nasync function RemovePaymentDue(data) {\r\n  let result = null;\r\n  await axios\r\n    .post(`http://192.168.1.103/api/guest/remove_payment_due`, data, {\r\n      withCredentials: true,\r\n      headers: { \"X-CSRF-TOKEN\": getCookie(\"csrf_access_token\") }\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      result = res\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      result = err.response.data\r\n    })\r\n  return result;\r\n}\r\nexport { Signout, CheckToken, ValidateLogin, MaintenancelogSubmit, WaterBillSubmit, ElectricBillSubmit, GuestRetrieveData, GuestRetrieveRoom, GuestCheckOut, GuestCheckIn, RetrievePaymentDue, RemovePaymentDue };","import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport { ValidateLogin } from \"../../helper/RequestAction\";\r\nimport { Redirect } from \"react-router\";\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [login, setLogin] = useState(null);\r\n  //const [done , setDone] = useState(undefined)\r\n\r\n  const Login_Action = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: username,\r\n      password: password,\r\n    }; \r\n    ValidateLogin(user).then(res => {setLogin(res)})\r\n  }\r\n  if (login) {\r\n    return (<Redirect to=\"/\" />)\r\n  }\r\n  return (\r\n    <div className=\"card-wrapper\">\r\n      <div className=\"card\">\r\n        <h1 className=\"center\">Log In</h1>\r\n\r\n        <form name=\"login_form\" onSubmit={Login_Action}>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"field\"\r\n            required\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          ></input>\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"field\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></input>\r\n\r\n          <p className=\"error error--hidden\"></p>\r\n\r\n          <input type=\"submit\" value=\"Log In\" className=\"btn\"></input>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './button.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\nconst SIZES = ['btn--medium', 'btn--large']\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize }) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n    return(<Link to='/login' className='btn-mobie'>\r\n        <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick = {onClick}\r\n        type={type}\r\n        >\r\n            {children}\r\n        </button>\r\n    </Link>)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Button } from '../components/button';\r\nimport { Link } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport { Signout } from '../helper/RequestAction'\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n            <nav className='navbar'>\r\n                <div className='navbar-container'>\r\n                </div>\r\n                <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n                    Modern Place\r\n                    <i className='fab fa-typo3' />\r\n                </Link>\r\n                <div className='menu-icon' onClick={handleClick}>\r\n                    <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link\r\n                            to='/maiantainance_log'\r\n                            className='nav-links'\r\n                            onClick={closeMobileMenu}\r\n                        >\r\n                            Maintainance log\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link to='/water_bill' className='nav-links' onClick={closeMobileMenu}>\r\n                            Water Bill\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link\r\n                            to='/electric_bill'\r\n                            className='nav-links'\r\n                            onClick={closeMobileMenu}\r\n                        >\r\n                            Electric Bill\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <Link\r\n                            to='/payment_due'\r\n                            className='nav-links'\r\n                            onClick={closeMobileMenu}\r\n                        >\r\n                            Payment Due\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to='/login'\r\n                            className='nav-links-mobile'\r\n                            onClick={Signout}\r\n                        >\r\n                            Sign Out\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {button && <Button buttonStyle='btn--outline' onClick={Signout} >SIGN OUT</Button>}\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './popup.css'\r\nimport { Link } from 'react-router-dom';\r\nimport {GuestCheckOut} from '../helper/RequestAction'\r\n\r\n\r\nexport default function Popup(props) {\r\n    return (props.trigger) ? (\r\n        <div className=\"popup\">\r\n            <div className=\"popup-inner\">\r\n                <button className=\"close-btn\" onClick={() => props.setTrigger(false)}>close</button>\r\n                <p>Room Number: {props.data._id}</p>\r\n                <p>status: {props.data.status}</p>\r\n                <p>rent: {props.data.rent}</p>\r\n                <p>deposit: {props.data.deposit}</p>\r\n                {props.data.guest !== \"\" && <p>guest citizenID: {props.data.guest._id}</p>}\r\n                {props.data.guest !== \"\" && <p>guest: {props.data.guest.first_name} {props.data.guest.last_name}</p>}\r\n                {props.data.guest !== \"\" && <p>Date of Birth: {props.data.guest.DoB}</p>}\r\n                {props.data.guest !== \"\" && <p>Check-In Date: {props.data.guest.rooms[props.data.guest.rooms.length - 1].check_in_date\r\n                }</p>}\r\n                {props.data.guest !== \"\" && <button className=\"checkout-btn\" onClick={() => GuestCheckOut({ \"roomid\": props.data._id }).then(res => { if (res.status === 200) { window.location.reload() } })\r\n                }>Check Out</button>}\r\n                {props.data.guest === \"\" && <button className=\"checkout-btn\"><Link to={\"/check-in/\"+props.data._id} className='Links'>Check-In</Link></button>}\r\n            </div>\r\n        </div>\r\n    ) : \"\";\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport {GuestRetrieveRoom} from '../helper/RequestAction'\r\nimport Popup from './popup'\r\nimport './room.css'\r\n\r\nexport const Room = ({ RoomObj }) => {\r\n    console.log(`room ${RoomObj.status}`);\r\n    const [button, setButton] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    return (<>\r\n        <button\r\n            className={`room room--${RoomObj.status}`}\r\n            onClick={() => GuestRetrieveRoom({\"room\":RoomObj._id}).then(res =>{\r\n                if (res.status === 200) {\r\n                    setData(res.data.data);\r\n                    setButton(true);\r\n                }\r\n                else {\r\n                    if (res.error) {     \r\n                        alert(res.error)\r\n                    }\r\n                    if (res.msg) {\r\n                        alert(res.msg)\r\n                    }\r\n                }\r\n            })}\r\n        >\r\n            {RoomObj._id}\r\n        </button>\r\n        <Popup trigger={button} setTrigger={setButton} data={data}/>\r\n        </>\r\n    )\r\n}\r\nexport default Room;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport * as loading from '../resources/loading.json'\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: loading.default,\r\n    rendererSetting:{\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div style={{marginTop: '10rem'}}>\r\n            <Lottie options={defaultOptions} height={120} width={120} />\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../Navbar'\r\nimport Room from '../room'\r\nimport { GuestRetrieveData } from '../../helper/RequestAction'\r\nimport { Loading } from '../loading'\r\nimport { useFormik } from 'formik'\r\n\r\nfunction Dashboard() {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            building: 'A',\r\n            floor: '1'\r\n        }\r\n    })\r\n    const [status, setStatus] = useState(null)\r\n    useEffect(() => {\r\n        setStatus(null)\r\n        GuestRetrieveData(formik.values).then(data => {\r\n            if (data.status === 200) {\r\n                setStatus(data.data.data)\r\n            }\r\n            else {\r\n                if (data.error) {\r\n                    alert(data.error)\r\n                }\r\n                if (data.msg) {\r\n                    alert(data.msg)\r\n                }\r\n            }\r\n        })\r\n    }, [formik.values])\r\n    if (status === null) {\r\n        return <Loading Loading={Loading} />\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"card-wrapper2\">\r\n                <div>Dashboard</div>\r\n                <select name=\"building\"\r\n                    id=\"building\"\r\n                    className=\"field\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.building}\r\n                    required>\r\n\r\n                    <option value=\"A\">A</option>\r\n                    <option value=\"B\">B</option>\r\n\r\n                </select>\r\n                <select name=\"floor\"\r\n                    id=\"floor\"\r\n                    className=\"field\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.floor}\r\n                    required>\r\n\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n\r\n                </select>\r\n            </div>\r\n            <ul>\r\n                {status.map(room => (\r\n                    <Room key={room._id} RoomObj={room} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Dashboard\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { CheckToken } from \"./RequestAction\"\r\n\r\n\r\n\r\n\r\n\r\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\r\n  const [token, setToken] = useState(null)\r\n  useEffect(() => {\r\n    setToken(null);\r\n    CheckToken()\r\n      .then(res => { setToken(res)})\r\n  }, [])\r\n  console.log(token);\r\n  if (token === null) {\r\n    console.log(\"hello\");\r\n    return <Loading Loading={Loading} /> // something that indicates you are waiting\r\n  }\r\n  else {\r\n    console.log(token);\r\n    return (\r\n      <Route\r\n        {...restOfProps}\r\n        render={(props) =>\r\n          token ? <Component {...props} /> : <Redirect to=\"/login/\" />\r\n        }\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ProtectedRoute;","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useFormik } from 'formik'\r\nimport { MaintenancelogSubmit } from '../../helper/RequestAction'\r\nimport Navbar from '../Navbar'\r\n\r\n\r\n\r\nfunction Maintenancelog() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [redirect, setRedirect] = useState(null);\r\n    useEffect(() => {setRedirect(null)},[])\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            roomid: '',\r\n            code: '',\r\n            date: '',\r\n            cost: '',\r\n            note: ''\r\n        },\r\n        onSubmit: values => {\r\n            \r\n            setError(null)\r\n            MaintenancelogSubmit(values).then(res => {\r\n                console.log(res);\r\n                if (\"error\" in res ) {\r\n                    setError(res.error)\r\n                }\r\n                else if (\"msg\" in res){\r\n                    setError(res.msg)\r\n                }\r\n                else{\r\n                    alert(\"Success\")\r\n                    setRedirect(true)\r\n                }\r\n            });\r\n        }\r\n\r\n    })\r\n    if (redirect) {\r\n        return (<Redirect to=\"/\" />)\r\n      }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"card-wrapper\">\r\n\r\n                <form name=\"maintainance_form\" onSubmit={formik.handleSubmit}>\r\n                    <label htmlFor=\"roomId\">RoomId</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"roomid\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.roomid}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"code\">Code</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.code}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.date}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"cost\">Cost</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"cost\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.cost}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"note\" >Notes</label>\r\n                    <textarea rows=\"4\" cols=\"50\" name=\"note\" form=\"Notes\" className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.note}>\r\n                    </textarea>\r\n\r\n                   {error ? <p className=\"error\">{error}</p> : null}\r\n\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn\"></input>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Maintenancelog\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useFormik } from 'formik'\r\nimport { ElectricBillSubmit } from '../../helper/RequestAction'\r\nimport Navbar from '../Navbar'\r\n\r\n\r\n\r\nfunction ElectricBill() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [redirect, setRedirect] = useState(null);\r\n\r\n    useEffect(() => { setRedirect(null) }, [])\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            date: '',\r\n            building: 'A',\r\n            floor: '1',\r\n            r01: '',\r\n            r02: '',\r\n            r03: '',\r\n            r04: '',\r\n            r05: '',\r\n            r06: '',\r\n            r07: '',\r\n            r08: '',\r\n            r09: '',\r\n            r10: '',\r\n            r11: '',\r\n            r12: '',\r\n            r13: '',\r\n            r14: '',\r\n            r15: ''\r\n        },\r\n        onSubmit: values => {\r\n            setError(null)\r\n            let payload = {}\r\n            if (values && values.floor) {\r\n                payload.date = values.date;\r\n                payload.data = [];\r\n                for (const key in values) {\r\n                    if (!(key === \"date\" || key === \"building\" || key === \"floor\")) {\r\n                        if (values[key] === \"\") {\r\n                            break;\r\n                        }\r\n                        let room = {}\r\n                        room.roomid = values.building + values.floor + key.replace(\"r\", \"\")\r\n                        room.unit = values[key]\r\n                        payload.data.push(room)\r\n                        console.log(payload);\r\n                    }\r\n                }\r\n            }\r\n            ElectricBillSubmit(payload).then(res => {\r\n                if (\"error\" in res) {\r\n                    setError(res.error)\r\n                }\r\n                else if (\"msg\" in res) {\r\n                    setError(res.msg)\r\n                }\r\n                else {\r\n                    alert(\"Success\")\r\n                    setRedirect(true)\r\n                }\r\n            });\r\n        }\r\n\r\n    })\r\n    if (redirect) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"card-wrapper\">\r\n                <form name=\"electricbill_form\" onSubmit={formik.handleSubmit} >\r\n                    <label htmlFor=\"date\">Electric Bill</label>\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.date}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"building\">building</label>\r\n                    <select name=\"building\"\r\n                        id=\"building\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.building}\r\n                        required>\r\n\r\n                        <option value=\"A\">A</option>\r\n                        <option value=\"B\">B</option>\r\n\r\n                    </select>\r\n\r\n                    <label htmlFor=\"floor\">floor</label>\r\n                    <select name=\"floor\"\r\n                        id=\"floor\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.floor}\r\n                        required>\r\n\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n\r\n                    </select>\r\n\r\n\r\n                    <label htmlFor=\"01\">{formik.values.building + formik.values.floor}01</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r01\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r01}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"02\">{formik.values.building + formik.values.floor}02</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r02\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r02}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}03</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r03\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r03}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}04</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r04\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r04}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}05</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r05\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r05}\r\n                        required\r\n                    ></input>\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}06</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r06\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r06}\r\n                        required\r\n                    ></input>\r\n                    {formik.values.floor !== \"1\" ?\r\n                        <>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}07</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r07\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r07}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}08</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r08\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r08}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}09</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r09\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r09}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}10</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r10\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r10}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}11</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r11\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r11}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}12</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r12\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r12}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}13</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r13\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r13}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}14</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r14\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r14}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}15</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r15\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r15}\r\n                                required\r\n                            ></input>\r\n                        </> : null}\r\n\r\n                    {error ? <p className=\"error\">{error}</p> : null}\r\n\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn\"></input>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ElectricBill","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useFormik } from 'formik'\r\nimport { WaterBillSubmit } from '../../helper/RequestAction'\r\nimport Navbar from '../Navbar'\r\n\r\n\r\n\r\nfunction WaterBill() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [redirect, setRedirect] = useState(null);\r\n\r\n    useEffect(() => { setRedirect(null) }, [])\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            date: '',\r\n            building: 'A',\r\n            floor: '1',\r\n            r01: '',\r\n            r02: '',\r\n            r03: '',\r\n            r04: '',\r\n            r05: '',\r\n            r06: '',\r\n            r07: '',\r\n            r08: '',\r\n            r09: '',\r\n            r10: '',\r\n            r11: '',\r\n            r12: '',\r\n            r13: '',\r\n            r14: '',\r\n            r15: ''\r\n        },\r\n        onSubmit: values => {\r\n            setError(null)\r\n            let payload = {}\r\n            if (values && values.floor) {\r\n                payload.date = values.date;\r\n                payload.data = [];\r\n                for (const key in values) {\r\n                    if (!(key === \"date\" || key === \"building\" || key === \"floor\")) {\r\n                        if (values[key] === \"\") {\r\n                            break;\r\n                        }\r\n                        let room = {}\r\n                        room.roomid = values.building + values.floor + key.replace(\"r\", \"\")\r\n                        room.unit = values[key]\r\n                        payload.data.push(room)\r\n                    }\r\n                }\r\n            }\r\n            WaterBillSubmit(payload).then(res => {\r\n                if (\"error\" in res) {\r\n                    setError(res.error)\r\n                }\r\n                else if (\"msg\" in res) {\r\n                    setError(res.msg)\r\n                }\r\n                else {\r\n                    alert(\"Success\")\r\n                    setRedirect(true)\r\n                }\r\n            });\r\n        }\r\n\r\n    })\r\n    if (redirect) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"card-wrapper\">\r\n\r\n                <form name=\"waterbill_form\" onSubmit={formik.handleSubmit} >\r\n                    <label htmlFor=\"date\">Water Bill</label>\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.date}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"building\">building</label>\r\n                    <select name=\"building\"\r\n                        id=\"building\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.building}\r\n                        required>\r\n\r\n                        <option value=\"A\">A</option>\r\n                        <option value=\"B\">B</option>\r\n\r\n                    </select>\r\n\r\n                    <label htmlFor=\"floor\">floor</label>\r\n                    <select name=\"floor\"\r\n                        id=\"floor\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.floor}\r\n                        required>\r\n\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n\r\n                    </select>\r\n\r\n\r\n                    <label htmlFor=\"01\">{formik.values.building + formik.values.floor}01</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r01\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r01}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"02\">{formik.values.building + formik.values.floor}02</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r02\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r02}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}03</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r03\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r03}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}04</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r04\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r04}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}05</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r05\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r05}\r\n                        required\r\n                    ></input>\r\n                    <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}06</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"r06\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.r06}\r\n                        required\r\n                    ></input>\r\n                    {formik.values.floor !== \"1\" ?\r\n                        <>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}07</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r07\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r07}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}08</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r08\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r08}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}09</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r09\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r09}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}10</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r10\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r10}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}11</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r11\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r11}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}12</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r12\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r12}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}13</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r13\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r13}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}14</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r14\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r14}\r\n                                required\r\n                            ></input>\r\n\r\n                            <label htmlFor=\"roomId\">{formik.values.building + formik.values.floor}15</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"r15\"\r\n                                className=\"field\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.r15}\r\n                                required\r\n                            ></input>\r\n                        </> : null}\r\n\r\n                    {error ? <p className=\"error\">{error}</p> : null}\r\n\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn\"></input>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default WaterBill","import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../Navbar'\r\nimport { useFormik } from 'formik'\r\nimport { GuestCheckIn } from \"../../helper/RequestAction\"\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function Checkin(props) {\r\n    const [error, setError] = useState(null);\r\n    const [redirect, setRedirect] = useState(null);\r\n    useEffect(() => { setRedirect(null) }, [])\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            id: \"\",\r\n            roomid: props.match.params.id,\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            DoB: \"\",\r\n            check_in_date: \"\",\r\n            check_out_date:\"\",\r\n            status: \"Monthly\",\r\n            rent: 0,\r\n            deposit: 0\r\n\r\n        },\r\n        onSubmit: values => {\r\n            GuestCheckIn(values).then(res => {\r\n                if (\"error\" in res) {\r\n                    setError(res.error)\r\n                }\r\n                else if (\"msg\" in res) {\r\n                    setError(res.msg)\r\n                }\r\n                else {\r\n                    alert(\"Success\")\r\n                    setRedirect(true)\r\n                }\r\n            });\r\n        }\r\n    })\r\n    if (redirect) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"card-wrapper\">\r\n                <form name=\"checkin\" onSubmit={formik.handleSubmit}>\r\n                    <label htmlFor=\"roomId\">Check-in for {props.match.params.id}</label>\r\n                    <label htmlFor=\"roomId\">Citizen Id \"X-XXXX-XXXXX-XX-X\"</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.id}\r\n                        required\r\n                    ></input>\r\n                    <label htmlFor=\"first_name\">First Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"first_name\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.first_name}\r\n                        required\r\n                    ></input>\r\n                    <label htmlFor=\"last_name\">Last Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"last_name\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.last_name}\r\n                        required\r\n                    ></input>\r\n                    <label htmlFor=\"DoB\">Date of Birth</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"DoB\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.DoB}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"check_in_date\">Check-In Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"check_in_date\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.check_in_date}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"check_in_date\">Check-Out Date(optional)</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"check_out_date\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.check_out_date}\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"rent\">Rent</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"rent\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.rent}\r\n                        required\r\n                    ></input>\r\n\r\n                    <label htmlFor=\"deposit\">Deposit</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"deposit\"\r\n                        className=\"field\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.deposit}\r\n                        required\r\n                    ></input>\r\n                    <label htmlFor=\"check_in_date\">Rent Type</label>\r\n                    <select name=\"status\"\r\n                        className=\"field\"\r\n                        id=\"status\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.status}\r\n                        required>\r\n\r\n                        <option value=\"Monthly\">Monthly</option>\r\n                        <option value=\"Daily\">Daily</option>\r\n\r\n                    </select>\r\n\r\n                    {error ? <p className=\"error\">{error}</p> : null}\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn\"></input>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../Navbar'\r\nimport { RetrievePaymentDue, RemovePaymentDue } from '../../helper/RequestAction'\r\nimport { Loading } from '../loading'\r\nimport \"./payment.css\"\r\n\r\nexport default function Payment() {\r\n    const [status, setStatus] = useState(null)\r\n    useEffect(() => {\r\n        setStatus(null)\r\n        RetrievePaymentDue().then(data => {\r\n            if (data.status === 200) {\r\n                setStatus(data.data.data)\r\n                console.log(data.data.data);\r\n            }\r\n        })\r\n    }, [])\r\n    if (status === null) {\r\n        return <Loading Loading={Loading} />\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <ul>\r\n                {status.map(room => (\r\n                    <div key={room.roomid + room.date} className=\"container\">\r\n                        <p className=\"content\"> RoomId: {room.roomid} </p>\r\n                        <p className=\"content\"> Amount: {room.amount} </p>\r\n                        <p className=\"content\"> Name: {room.first_name} {room.last_name} </p>\r\n                        <p className=\"content\"> Date: {room.date} </p>\r\n                        <button className=\"checkout-btn\" onClick={() => RemovePaymentDue(room)\r\n                            .then((res) => {\r\n                                if (res.status === 200) {\r\n                                    window.location.reload()\r\n                                }\r\n                                else {\r\n                                    if (res.error) {     \r\n                                        alert(res.error)\r\n                                    }\r\n                                    if (res.msg) {\r\n                                        alert(res.msg)\r\n                                    }\r\n                                }\r\n                            })\r\n                        }> Remove </button>\r\n                    </div>\r\n\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React  from 'react';\r\n//import Navbar from './components/Navbar';\r\nimport {BrowserRouter  ,Route,Switch} from 'react-router-dom';\r\nimport login from './components/pages/login';\r\nimport './App.css';\r\nimport Dashboard from './components/pages/dashboard';\r\nimport ProtectedRoute from './helper/ProtectedRoute';\r\nimport Maiantainancelog from './components/pages/Maiantainancelog';\r\nimport ElectricBill from './components/pages/electricbill';\r\nimport WaterBill from './components/pages/waterbilll';\r\nimport Checkin from './components/pages/checkin';\r\nimport Payment from './components/pages/payment';\r\n\r\nfunction App() {\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //       console.log('******************* UNMOUNTED');\r\n    //     };\r\n    //   }, []);\r\n        return (\r\n            <>\r\n                <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path='/login' exact component={login}/>\r\n                            <ProtectedRoute path='/' exact component={Dashboard}/>\r\n                            <ProtectedRoute path='/maiantainance_log' exact component={Maiantainancelog}/>\r\n                            <ProtectedRoute path='/electric_bill' exact component={ElectricBill}/>\r\n                            <ProtectedRoute path='/water_bill' exact component={WaterBill}/>\r\n                            <ProtectedRoute path='/check-in/:id' component={Checkin}/>\r\n                            <ProtectedRoute path='/payment_due' component={Payment}/>\r\n                        </Switch>\r\n                </BrowserRouter>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}